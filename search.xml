<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[第一篇]]></title>
    <url>%2F2018%2F09%2F04%2F%E7%AC%AC%E4%B8%80%E7%AF%87%2F</url>
    <content type="text"><![CDATA[青春如诗，诗如画。]]></content>
      <categories>
        <category>新知</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Eclipse快捷键]]></title>
    <url>%2F2015%2F08%2F06%2FEclipse%E5%BF%AB%E6%8D%B7%E9%94%AE%2F</url>
    <content type="text"><![CDATA[Eclipse中10个最有用的快捷键组合 一个Eclipse骨灰级开发者总结了他认为最有用但又不太为人所知的快捷键组合。通过这些组合可以更加容易的浏览源代码，使得整体的开发效率和质量得到提升。 1. ctrl+shift+r：打开资源 这可能是所有快捷键组合中最省时间的了。这组快捷键可以让你打开你的工作区中任何一个文件，而你只需要按下文件名或mask名中的前几个字母，比如applic*.xml。美中不足的是这组快捷键并非在所有视图下都能用。 2. ctrl+o：快速outline 如果想要查看当前类的方法或某个特定方法，但又不想把代码拉上拉下，也不想使用查找功能的话，就用ctrl+o吧。它可以列出当前类中的所有方法及属性，你只需输入你想要查询的方法名，点击enter就能够直接跳转至你想去的位置。 3. ctrl+e：快速转换编辑器 这组快捷键将帮助你在打开的编辑器之间浏览。使用ctrl+page down或ctrl+page up可以浏览前后的选项卡，但是在很多文件打开的状态下，ctrl+e会更加有效率。 4. ctrl+2，L：为本地变量赋值 开发过程中，我常常先编写方法，如Calendar.getInstance()，然后通过ctrl+2快捷键将方法的计算结果赋值于一个本地变量之上。 这样我节省了输入类名，变量名以及导入声明的时间。Ctrl+F的效果类似，不过效果是把方法的计算结果赋值于类中的域。 5. alt+shift+r：重命名 重命名属性及方法在几年前还是个很麻烦的事，需要大量使用搜索及替换，以至于代码变得零零散散的。今天的Java IDE提供源码处理功能，Eclipse也是一样。现在，变量和方法的重命名变得十分简单，你会习惯于在每次出现更好替代名称的时候都做一次重命名。要使 用这个功能，将鼠标移动至属性名或方法名上，按下alt+shift+r，输入新名称并点击回车。就此完成。如果你重命名的是类中的一个属性，你可以点击alt+shift+r两次，这会呼叫出源码处理对话框，可以实现get及set方法的自动重命名。 6. alt+shift+l以及alt+shift+m：提取本地变量及方法 源码处理还包括从大块的代码中提取变量和方法的功能。比如，要从一个string创建一个常量，那么就选定文本并按下alt+shift+l即可。如果同 一个string在同一类中的别处出现，它会被自动替换。方法提取也是个非常方便的功能。将大方法分解成较小的、充分定义的方法会极大的减少复杂度，并提 升代码的可测试性。 7. shift+enter及ctrl+shift+enter Shift+enter在当前行之下创建一个空白行，与光标是否在行末无关。Ctrl+shift+enter则在当前行之前插入空白行。 8. Alt+方向键 这也是个节省时间的法宝。这个组合将当前行的内容往上或下移动。在try/catch部分，这个快捷方式尤其好使。 9. ctrl+m 大显示屏幕能够提高工作效率是大家都知道的。Ctrl+m是编辑器窗口最大化的快捷键。 10. ctrl+.及ctrl+1：下一个错误及快速修改 ctrl+.将光标移动至当前文件中的下一个报错处或警告处。这组快捷键我一般与ctrl+1一并使用，即修改建议的快捷键。新版Eclipse的修改建 议做的很不错，可以帮你解决很多问题，如方法中的缺失参数，throw/catch exception，未执行的方法等等。 更多快捷键组合可在Eclipse按下ctrl+shift+L查看。]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[【转】PHP写XML方法很多，简单说一下增、删、改、查。]]></title>
    <url>%2F2011%2F08%2F10%2F%E3%80%90%E8%BD%AC%E3%80%91PHP%E5%86%99XML%E6%96%B9%E6%B3%95%E5%BE%88%E5%A4%9A%EF%BC%8C%E7%AE%80%E5%8D%95%E8%AF%B4%E4%B8%80%E4%B8%8B%E5%A2%9E%E3%80%81%E5%88%A0%E3%80%81%E6%94%B9%E3%80%81%E6%9F%A5%E3%80%82%2F</url>
    <content type="text"><![CDATA[PHP写XML方法很多，这里主要介绍一下DOMDocument的用法，跟JS大体上相同，其实非常简单。 共分四个文件，分别是创建、增加、删除、修改四个功能，变量都是写死的，改一改用$_POST方式接收就可以用了123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188//index.php 创建功能&lt;?php$xmlpatch = &apos;index.xml&apos;;$_id = &apos;1&apos;;$_title = &apos;title1&apos;;$_content = &apos;content1&apos;;$_author = &apos;author1&apos;;$_sendtime = &apos;time1&apos;;$_htmlpatch = &apos;1.html&apos;;$doc = new DOMDocument(&apos;1.0&apos;, &apos;utf-8&apos;);$doc -&gt; formatOutput = true;$root = $doc -&gt; createElement(&apos;root&apos;);//新建节点$index = $doc -&gt; createElement(&apos;index&apos;);//新建节点$url = $doc -&gt; createAttribute(&apos;url&apos;);//新建属性$patch = $doc -&gt; createTextNode($_htmlpatch);//新建TEXT值$url -&gt; appendChild($patch);//将$patch文本设为$url属性的值$id = $doc -&gt; createAttribute(&apos;id&apos;);$newsid = $doc -&gt; createTextNode($_id);$id -&gt; appendChild($newsid);$title = $doc -&gt; createAttribute(&apos;title&apos;);$newstitle = $doc -&gt; createTextNode($_title);$title -&gt; appendChild($newstitle);$content = $doc -&gt; createTextNode($_content);//节点值$author = $doc -&gt; createAttribute(&apos;author&apos;);$newsauthor = $doc -&gt; createTextNode($_author);$author -&gt; appendChild($newsauthor);$sendtime = $doc -&gt; createAttribute(&apos;time&apos;);$newssendtime = $doc -&gt; createTextNode($_sendtime);$sendtime -&gt; appendChild($newssendtime);$index -&gt; appendChild($id);//将$id设为index节点的属性，以下类同$index -&gt; appendChild($title);$index -&gt; appendChild($content);$index -&gt; appendChild($url);$index -&gt; appendChild($author);$index -&gt; appendChild($sendtime);$root -&gt; appendChild($index);//设置index为root字节点$doc -&gt; appendChild($root);//设置root为跟节点$doc -&gt; save($xmlpatch);//保存文件echo $xmlpatch . &apos; has create success&apos;;?&gt;&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;[http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd](http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd)&quot;&gt; &lt;html xmlns=&quot;[http://www.w3.org/1999/xhtml](http://www.w3.org/1999/xhtml)&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;title&gt;XML操作&lt;/title&gt; &lt;/head&gt;&lt;body&gt; &lt;/body&gt; &lt;/html&gt;//add.php 增加功能(跟index.php文件差不多，主要就是加个load载入跟 $root = $doc -&gt; documentElement获得跟节点&lt;?php$xmlpatch = &apos;index.xml&apos;;$_id = &apos;2&apos;;$_title = &apos;title2&apos;;$_content = &apos;content2&apos;;$_author = &apos;author2&apos;;$_sendtime = &apos;time2&apos;;$_htmlpatch = &apos;2.html&apos;;$doc = new DOMDocument();$doc -&gt; formatOutput = true;if($doc -&gt; load($xmlpatch)) &#123;$root = $doc -&gt; documentElement;//获得根节点(root)$index = $doc -&gt; createElement(&apos;index&apos;);$url = $doc -&gt; createAttribute(&apos;url&apos;);$patch = $doc -&gt; createTextNode($_htmlpatch);$url -&gt; appendChild($patch);$id = $doc -&gt; createAttribute(&apos;id&apos;);$newsid = $doc -&gt; createTextNode($_id);$id -&gt; appendChild($newsid);$title = $doc -&gt; createAttribute(&apos;title&apos;);$newstitle = $doc -&gt; createTextNode($_title);$title -&gt; appendChild($newstitle);$content = $doc -&gt; createTextNode($_content);$author = $doc -&gt; createAttribute(&apos;author&apos;);$newsauthor = $doc -&gt; createTextNode($_author);$author -&gt; appendChild($newsauthor);$sendtime = $doc -&gt; createAttribute(&apos;time&apos;);$newssendtime = $doc -&gt; createTextNode($_sendtime);$sendtime -&gt; appendChild($newssendtime);$index -&gt; appendChild($id);$index -&gt; appendChild($title);$index -&gt; appendChild($content);$index -&gt; appendChild($url);$index -&gt; appendChild($author);$index -&gt; appendChild($sendtime);$root -&gt; appendChild($index);$doc -&gt; save($xmlpatch);echo $_id . &apos; has been added in &apos; . $xmlpatch;&#125; else &#123;echo &apos;xml file loaded error!&apos;;&#125;?&gt;&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;[http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd](http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd)&quot;&gt; &lt;html xmlns=&quot;[http://www.w3.org/1999/xhtml](http://www.w3.org/1999/xhtml)&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;title&gt;XML操作-添加&lt;/title&gt; &lt;/head&gt;&lt;body&gt; &lt;/body&gt; &lt;/html&gt;//edit.php 修改功能(这里只修改title属性值 跟节点值)&lt;?php$xmlpatch = &apos;index.xml&apos;;$_id = &apos;2&apos;;$_title = &apos;has been changed&apos;;$_content = &apos;has been changed&apos;;$doc = new DOMDocument();$doc -&gt; formatOutput = true;if($doc -&gt; load($xmlpatch)) &#123;$root = $doc -&gt; documentElement;$elm = $root -&gt; getElementsByTagName(&apos;index&apos;);$checkexist = 0;foreach ($elm as $new) &#123; if($new -&gt; getAttribute(&apos;id&apos;) == $_id) &#123; $new -&gt; setAttribute(&apos;title&apos;, $_title); $new -&gt; nodeValue = $_content;//修改节点值，真是太意外了，没想到跟JS一样直接能赋值... //$new -&gt; removeChild($new -&gt; nodevalue); $checkexist = 1; &#125;&#125;if($checkexist == 0) &#123; echo $_id . &apos; is not found in &apos; . $xmlpatch;&#125; else &#123; $doc -&gt; save($xmlpatch); echo $_id . &apos; has been changed&apos;;&#125;&#125; else &#123;echo &apos;xml file loaded error!&apos;;&#125;?&gt;&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;[http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd](http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd)&quot;&gt; &lt;html xmlns=&quot;[http://www.w3.org/1999/xhtml](http://www.w3.org/1999/xhtml)&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;title&gt;XML操作-修改&lt;/title&gt; &lt;/head&gt;&lt;body&gt; &lt;/body&gt; &lt;/html&gt;//del.php 删除功能&lt;?php$xmlpatch = &apos;index.xml&apos;;$_id = &apos;2&apos;;$doc = new DOMDocument();$doc -&gt; formatOutput = true;if($doc -&gt; load($xmlpatch)) &#123;$root = $doc -&gt; documentElement;$elm = $root -&gt; getElementsByTagName(&apos;index&apos;);foreach ($elm as $new) &#123; if($new -&gt; getAttribute(&apos;id&apos;) == $_id) &#123; if($root -&gt; removeChild($new)) &#123; echo $_id . &apos; has been deleted&apos;; &#125; else &#123; echo $_id . &apos; delete failed&apos;; &#125; &#125;&#125;$doc -&gt; save($xmlpatch);&#125; else &#123;echo &apos;xml file loaded error!&apos;;&#125;?&gt;&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;[http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd](http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd)&quot;&gt; &lt;html xmlns=&quot;[http://www.w3.org/1999/xhtml](http://www.w3.org/1999/xhtml)&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;title&gt;XML操作-删除&lt;/title&gt; &lt;/head&gt;&lt;body&gt; &lt;/body&gt; &lt;/html&gt; 总结一下，创建跟添加主要用的就是create跟appendChild，create后边跟Element就是创建节点，跟Attribute就是创建属性，TextNode就是创建值，然后appendChild就是设置从属关系，这么一看非常简单。 删除与修改都是用先获得节点列表getElementsByTagName然后foreach遍历想要修改的节点，数据多可能会慢点]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
</search>
